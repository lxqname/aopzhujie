

log.env.logger.level=info

# mysql
spring.datasource.url = jdbc:mysql://10.16.0.28:3306/prod_cdp_wy_market_center?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username = root
spring.datasource.password = 4x35H5%p*d$nTmg$H6Uj
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
# 数据库连接心跳:关闭的话数据库socket会断掉
spring.datasource.test-while-idle=true
spring.datasource.validation-query=SELECT 1

# 开发环境(create-drop)(create)(update) 生产环境(none) ref: http://blog.csdn.net/zwhfyy/article/details/4514966
spring.jpa.hibernate.ddl-auto = none
spring.jpa.hibernate.dialect = org.hibernate.dialect.MySQLInnoDBDialect
# spring.jpa.show-sql = true
# 不明确指定database, spring-boot会根据classpath中的依赖项自动配置
spring.jpa.database = MYSQL

dubbo.registry.address = zookeeper://10.16.0.25:2181?backup=10.16.0.26:2181,10.16.0.27:2181



# 缓存类型single(单点),sentinel(哨兵),cluster(集群)
redis.type=cluster
# redis密码(集群密码)
redis.appSecret=DrZ38zy8N5cFngPuPyxx

redis.addresses=10.16.0.25:7001,\
  10.16.0.25:7002,\
  10.16.0.26:7001,\
  10.16.0.26:7002,\
  10.16.0.27:7001,\
  10.16.0.27:7002

# 连接池
redis.maxTotal=10
redis.maxIdle=10
redis.maxWaitMillis=30000


# rabbitmq
deepexi.mq.messageRegistryVo.type = rabbit
#单机使用
#deepexi.mq.messageRegistryVo.host = 203.195.136.11
#deepexi.mq.messageRegistryVo.port = 5672
#集群使用addresses:ip1:port1,ip2:port2,ip3:port3
deepexi.mq.messageRegistryVo.addresses = 10.16.0.25:5672,10.16.0.26:5672,10.16.0.27:5672
deepexi.mq.messageRegistryVo.username = deepexi
deepexi.mq.messageRegistryVo.password = u4F24PG9HvSVaqpdSHcV
